{"version":3,"sources":["theme.js","tasks.js","common/CompletableTextField.js","common/Hotkeys.js","common/Terminal.js","common/ContainerSelection.js","common/FileImportButton.js","common/TextFieldModal.js","clipfics/cookiesynth/common.js","common/RangeUtils.js","clipfics/cookiesynth/CookieSynthLabel.js","clipfics/LabelsPanel.js","common/useLoopControls.js","common/useModalControls.js","clipfics/ClipficsControlPanel.js","clipfics/cookiesynth/CookieSynthPaper.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","theme","createMuiTheme","useStyles","makeStyles","height","background","palette","primary","main","color","contrastText","margin","spacing","padding","overflow","width","position","top","left","transform","secondary","ClipficsContext","useClipfics","useContext","onComplete","other","useState","text","setText","onSubmit","e","preventDefault","TextField","value","onChange","target","IGNORE_KEYS","Set","executeActions","actions","length","forEach","f","key","Hotkeys","this","CaptureShortcut","props","hotkeys","Hotkey","CreateNewHotkey","keyDownListener","has","document","activeElement","tagName","toLowerCase","useEffect","addEventListener","removeEventListener","shortcut","action","previousActions","push","filter","x","description","classes","registerHotkey","unregisterHotkey","Paper","className","onCapture","onCaptureHotkey","Grid","container","alignItems","justify","Typography","display","onHotkeyAdded","pendingLabel","setPendingLabel","captureShortcut","setCaptureShortcut","CompletableTextField","label","Modal","open","Console","history","nextId","Component","terminal","rest","undefined","join","updateDisplay","element","callback","HistoryItem","children","TerminalDisplay","setHistory","historyRef","createRef","onUpdate","registerOnUpdate","current","scrollTop","scrollHeight","unregisterOnUpdate","Box","ref","component","ContainerSelection","containerRef","getRange","range","setRange","selection","window","getSelection","removeAllRanges","addRange","rangeCount","getRangeAt","isRangeWithin","selectionRange","startNode","startContainer","endNode","endContainer","contains","onFileLoaded","id","type","style","event","reader","FileReader","onload","result","readAsText","files","htmlFor","Button","variant","onClose","autoFocus","KEYWORD","SEGTYPE","OPEN_REGEX","RegExp","MISSING_VALUES_REGEX","RangeUtils","startOffset","endOffset","Range","setStart","setEnd","setEndAfter","node","insertNode","fn","currentNode","nextSibling","applyToLeaves","parentNode","currentRange","setStartBefore","stack","pop","childNodes","applyToLeaf","i","CookieSynthLabel","missingProperties","providedValues","missingValueMatches","matchAll","getMissingValues","item","context","offset","index","search","nextIndex","originalLabel","lastOffset","nextOffset","substring","completedLabel","getCompletedLabel","test","match","exec","full","keyword","getTagsFromLabel","tagStart","tagEnd","addLabelToRange","utils","startIndicator","createElement","setAttribute","prepend","endIndicator","append","apply","newNode","surroundContents","highlightSimpleRange","ClipficsHotkey","onLabel","ClipficsLabelsPanel","savedRange","setSavedRange","saveSelection","restoreSelection","useSelectionCache","currentArray","setCurrentArray","currentIndex","setCurrentIndex","currentItem","setCurrentItem","hasNext","setHasNext","resolveArray","setResolveArray","rejectArray","setRejectArray","begin","array","Promise","resolve","reject","moveToNext","Error","newIndex","terminate","useLoopControls","currentMissingProp","hasMissingProps","beginRequestMissingProps","requestNextMissingProp","stopRequestingProps","isModalOpen","setIsModalOpen","openModal","closeModal","useModalControls","isTemplateModalOpen","openTemplateModal","closeTemplateModal","displayKeys","setDisplayKeys","onTemplateSpecified","then","injectLabel","log","catch","error","console","TextFieldModal","setNextValue","newHotkey","TabPanel","hidden","p","selectedTab","setSelectedTab","Toolbar","Tabs","newValue","Tab","controlTab","sanitizedHtml","customSanitizeHtml","div","innerHTML","labels","querySelectorAll","dangerouslySetInnerHTML","__html","html","sanitizeHtml","allowedTags","disallowedTagsMode","allowedAttributes","a","img","span","selfClosing","allowedSchemes","allowedSchemesByTag","allowedSchemesAppliedToAttributes","allowProtocolRelative","NavigationBar","AppBar","IconButton","edge","aria-label","CookieSynthExport","onClick","storyData","getElementById","storyBlob","Blob","URL","createObjectURL","download","click","App","storyContents","setStoryContents","themeContext","taskContext","useHotkeys","storyContainerRef","Terminal","Provider","xs","CookieSynthPaper","ClipficsControlPanel","FileImportButton","contents","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0d009af4.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nexport const ThemeContext = createContext();\n\n// TODO: https://material.io/design/material-theming/implementing-your-theme.html#color\nexport const theme = createMuiTheme();\n\n// TODO: use BEM naming conventions for these\nexport const useStyles = makeStyles({\n  'c-app--full-height': {\n    height: 'calc(100vh - 16px)',\n    'max-height': 'calc(100vh - 16px)',\n  },\n\n  'c-story-panel--full-height': {\n    'max-height': 'calc(85vh - 64px)',\n    'height': 'calc(85vh - 64px)',\n  },\n\n  'c-control-panel': {},\n\n  'c-fileio-import-button': {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    margin: theme.spacing(1),\n  },\n\n  'c-fileio-export-button': {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    margin: theme.spacing(1),\n  },\n\n  'c-story-panel__paper': {\n    padding: theme.spacing(1),\n    'user-select': 'contain',\n  },\n\n  'c-story-panel__container': {\n    overflow: 'auto',\n    height: '100%',\n  },\n\n  'c-controls--fill-width': {\n    width: '100%',\n  },\n\n  'c-controls__textfield': {\n    'margin-top': theme.spacing(2),\n    'margin-bottom': theme.spacing(2),\n  },\n\n  'c-hotkey__paper': {\n    padding: theme.spacing(1),\n    width: '100%',\n  },\n\n  'c-labelmodal__container': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: '50%',\n    transform: 'translate(-50%, -50%)',\n    background: 'white',\n    padding: theme.spacing(5),\n  },\n\n  'c-labelmodal__textfield': {\n    width: '100%',\n  },\n\n  'c-request-hotkey__request': {\n    background: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    padding: theme.spacing(1),\n    'font-weight': 'bold',\n  },\n\n  'c-request-hotkey__description': {\n    padding: theme.spacing(1),\n  },\n\n  'c-request-hotkey__paper': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    background: 'white',\n    padding: theme.spacing(2),\n  },\n\n  'c-terminal': {\n    'padding-top': theme.spacing(2),\n    'padding-bottom': theme.spacing(2),\n    'padding-left': theme.spacing(1),\n    'padding-right': theme.spacing(1),\n    'max-height': 'calc(15vh - 32px)',\n    'height': 'calc(15vh - 32px)',\n    'overflow': 'auto',\n  },\n\n  'c-terminal__history': {\n    'font-family': \"'Inconsolata', monospace\",\n    'line-height': 1.0,\n  },\n});\n","import { createContext, useContext } from 'react';\n\nexport const ClipficsContext = createContext();\n\nexport const useClipfics = () => {\n  return useContext(ClipficsContext);\n}\n","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default ({ onComplete, ...other }) => {\n  const [text, setText] = useState('');\n\n  const onSubmitted = (e) => {\n    e.preventDefault();\n    onComplete(text);\n    setText('');\n  };\n\n  return (\n    <form onSubmit={onSubmitted}>\n      <TextField {...other} value={text} onChange={(e) => setText(e.target.value)} />\n    </form>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport CompletableTextField from 'common/CompletableTextField.js';\nimport { ThemeContext } from 'theme.js';\nimport { Paper, Grid, Modal, Typography } from '@material-ui/core';\n\nconst IGNORE_KEYS = new Set(['Shift', 'Control', 'Alt', 'CapsLock']);\n\nconst executeActions = (actions, e) => {\n  if (actions.length === 0) {\n    return;\n  }\n\n  e.preventDefault();\n  actions.forEach((f) => f(e.key));\n}\n\nexport default class Hotkeys {\n  #hotkeys = {};\n  CaptureShortcut;\n  Hotkey;\n  CreateNewHotkey;\n\n  constructor() {\n    this.CaptureShortcut = (props) => <CaptureShortcut hotkeys={this} {...props} />;\n    this.Hotkey = (props) => <Hotkey hotkeys={this} {...props} />;\n    this.CreateNewHotkey = (props) => <CreateNewHotkey hotkeys={this} {...props} />;\n  }\n\n  // React effect to use hotkeys on a page\n  useHotkeys() {\n    const keyDownListener = (e) => {\n      if (IGNORE_KEYS.has(e.key)) {\n        return;\n      }\n\n      if (this.#hotkeys['all'] && this.#hotkeys['all'].length !== 0) {\n        const actions = this.#hotkeys['all'];\n        executeActions(actions, e);\n        return;\n      }\n\n      if (e.key === 'Escape') {\n        const actions = this.#hotkeys['Escape'] || [];\n        executeActions(actions, e);\n        return;\n      }\n\n      if (document.activeElement.tagName.toLowerCase() === 'input') {\n        return;\n      }\n\n      const actions = this.#hotkeys[e.key] || [];\n      executeActions(actions, e);\n      return;\n    };\n\n    useEffect(() => {\n      document.addEventListener('keydown', keyDownListener);\n      return () => {\n        document.removeEventListener('keydown', keyDownListener);\n      };\n    });\n  }\n\n  registerHotkey(shortcut, action) {\n    let previousActions = this.#hotkeys[shortcut];\n    if (!previousActions) {\n      previousActions = [];\n      this.#hotkeys[shortcut] = previousActions;\n    }\n\n    previousActions.push(action);\n  }\n\n  unregisterHotkey(shortcut, action) {\n    this.#hotkeys[shortcut] = this.#hotkeys[shortcut].filter((x) => x !== action);\n  }\n}\n\nconst Hotkey = ({ hotkeys, shortcut, action, description, ...other }) => {\n  const { classes } = useContext(ThemeContext);\n\n  useEffect(() => {\n    hotkeys.registerHotkey(shortcut, action);\n    return () => {\n      hotkeys.unregisterHotkey(shortcut, action);\n    };\n  });\n\n  return (\n    <Paper className={classes['c-hotkey__paper']} {...other}>\n      {`${shortcut} 🠖 ${description}`}\n    </Paper>\n  );\n};\n\nconst CaptureShortcut = ({ hotkeys, description, onCapture, ...other }) => {\n  const { classes } = useContext(ThemeContext);\n\n  useEffect(() => {\n    const onCaptureHotkey = (key) => {\n      onCapture(key, description);\n    };\n\n    hotkeys.registerHotkey('all', onCaptureHotkey);\n\n    return () => {\n      hotkeys.unregisterHotkey('all', onCaptureHotkey);\n    };\n  });\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justify=\"center\"\n      className={classes['c-request-hotkey__paper']}\n      {...other}\n    >\n      <Typography display=\"inline\" className={classes['c-request-hotkey__request']}>\n        Select a hotkey\n      </Typography>\n      <Typography\n        display=\"inline\"\n        className={classes['c-request-hotkey__description']}\n      >\n        {` ${description}`}\n      </Typography>\n    </Grid>\n  );\n};\n\nconst CreateNewHotkey = ({ hotkeys, onHotkeyAdded, ...other }) => {\n  const { classes } = useContext(ThemeContext);\n\n  const [pendingLabel, setPendingLabel] = useState();\n  const [captureShortcut, setCaptureShortcut] = useState(false);\n\n  const requestHotkeyFor = (label) => {\n    setPendingLabel(label);\n    setCaptureShortcut(true);\n  };\n\n  const onShortcutCaptured = (shortcut, label) => {\n    setCaptureShortcut(false);\n    onHotkeyAdded(shortcut, label);\n  };\n\n  return (\n    <div>\n      <CompletableTextField\n        label=\"Add hotkey\"\n        className={`${classes['c-controls--fill-width']} ${classes['c-controls__textfield']}`}\n        onComplete={requestHotkeyFor}\n      />\n      <Modal open={captureShortcut}>\n        <div>\n          <CaptureShortcut\n            hotkeys={hotkeys}\n            description={pendingLabel}\n            onCapture={onShortcutCaptured}\n          />\n          }\n        </div>\n      </Modal>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState, createRef } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nimport { ThemeContext } from 'theme.js';\n\nexport default class Console {\n  history = [];\n  nextId = 0;\n  Component;\n  #onUpdateCallbacks = [];\n\n  constructor() {\n    this.Component = () => <TerminalDisplay terminal={this} />;\n  }\n\n  log(text, ...rest) {\n    if (rest !== undefined) {\n      text = `${text} ${rest.join(' ')}`;\n    }\n\n    this.history = [\n      ...this.history,\n      <HistoryItem key={this.nextId++}>>{text}</HistoryItem>,\n    ];\n    this.#onUpdateCallbacks.forEach((updateDisplay) => updateDisplay(this.history));\n  }\n\n  append(element) {\n    this.history = [...this.history, <div key={this.nextId++}>{element}</div>];\n    this.#onUpdateCallbacks.forEach((updateDisplay) => updateDisplay(this.history));\n  }\n\n  registerOnUpdate(callback) {\n    this.#onUpdateCallbacks.push(callback);\n  }\n\n  unregisterOnUpdate(callback) {\n    this.#onUpdateCallbacks = this.#onUpdateCallbacks.filter((x) => x !== callback);\n  }\n}\n\nconst HistoryItem = ({ children, ...other }) => {\n  const { classes } = useContext(ThemeContext);\n  return (\n    <Typography className={classes['c-terminal__history']} {...other}>\n      {children}\n    </Typography>\n  );\n};\n\nconst TerminalDisplay = ({ terminal }) => {\n  const { classes } = useContext(ThemeContext);\n  const [history, setHistory] = useState([terminal.history]);\n  const historyRef = createRef();\n\n  useEffect(() => {\n    const onUpdate = (history) => {\n      setHistory(history);\n    };\n\n    terminal.registerOnUpdate(onUpdate);\n    historyRef.current.scrollTop = historyRef.current.scrollHeight;\n\n    return () => {\n      terminal.unregisterOnUpdate(onUpdate);\n    };\n  });\n\n  return (\n    <Box ref={historyRef} component=\"div\" className={classes['c-terminal']}>\n      <div children={history} />\n    </Box>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport default class ContainerSelection {\n  #containerRef;\n\n  constructor(containerRef) {\n    this.#containerRef = containerRef;\n  }\n\n  useRange() {\n    const [range, setRange] = useState(this.getRange());\n\n    useEffect(() => {\n      document.addEventListener('selectionchange', () => {\n        setRange(this.getRange());\n      });\n    });\n\n    return range;\n  }\n\n  setRange(range) {\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  getRange() {\n    const selection = window.getSelection();\n    if (!selection.rangeCount) {\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    if (isRangeWithin(range, this.#containerRef.current)) {\n      return range;\n    }\n\n    return null;\n  }\n}\n\nconst isRangeWithin = (selectionRange, container) => {\n  if (!selectionRange || !container) {\n    return false;\n  }\n\n  const startNode = selectionRange.startContainer;\n  const endNode = selectionRange.endContainer;\n\n  if (!container.contains(startNode)) {\n    return false;\n  }\n\n  if (!container.contains(endNode)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const useSelectionCache = (selection) => {\n  let [savedRange, setSavedRange] = useState(null);\n\n  const saveSelection = () => {\n    setSavedRange(savedRange = selection.getRange());\n  }\n\n  const restoreSelection = () => {\n    if (savedRange === null) {\n      return;\n    }\n\n    selection.setRange(savedRange);\n  }\n\n  return { saveSelection, restoreSelection };\n}\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport { ThemeContext } from 'theme.js';\n\n/**\n * Button to load a story file into the StorySheet.\n */\nexport default ({ onFileLoaded }) => {\n  const { classes } = useContext(ThemeContext);\n\n  const handleFileSelected = (event) => {\n    const reader = new FileReader();\n    reader.onload = (e) => onFileLoaded(e.target.result);\n    reader.readAsText(event.target.files[0]);\n  };\n\n  return (\n    <span>\n      <input\n        id=\"c-raised-button-file\"\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={handleFileSelected}\n      />\n      <label htmlFor=\"c-raised-button-file\">\n        <Button\n          variant=\"contained\"\n          component=\"span\"\n          className={classes['c-fileio-import-button']}\n        >\n          Load story\n        </Button>\n      </label>\n    </span>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Modal } from '@material-ui/core';\nimport CompletableTextField from './CompletableTextField.js';\nimport { ThemeContext } from 'theme.js';\n\nexport default ({ open, onClose, ...other }) => {\n  const { classes } = useContext(ThemeContext);\n\n  return (\n    <div>\n      <Modal open={open} onClose={onClose}>\n        <div className={classes['c-labelmodal__container']}>\n          <CompletableTextField\n            autoFocus\n            className={classes['c-labelmodal__textfield']}\n            {...other}\n          />\n        </div>\n      </Modal>\n    </div>\n  );\n};\n","const KEYWORD = '[a-zA-Z][a-zA-Z0-9]*';\nconst VALUE = '\"(?:[^\"]*|\\\\?)\"';\nconst SEGTYPE = `${KEYWORD}`;\nconst OPEN_REGEX = new RegExp(\n  `^\\\\s*(${KEYWORD})(?:\\\\s*=\\\\s*${VALUE}|(?:\\\\s+${SEGTYPE}\\\\s*=\\\\s*${VALUE})*)\\\\s*$`,\n);\nconst MISSING_VALUES_REGEX = new RegExp(`(${KEYWORD})\\\\s*=\\\\s*\"(\\\\?)\"`, 'g');\n\nexport const isLabelValid = (label) => {\n  const result = OPEN_REGEX.test(label);\n  return result;\n};\n\nexport const getTagsFromLabel = (label) => {\n  const match = OPEN_REGEX.exec(label);\n  const [full, keyword] = match;\n\n  const tagStart = `[${full}]`;\n  const tagEnd = keyword === 'meta' ? null : `[/${keyword}]`;\n\n  return [tagStart, tagEnd];\n};\n\nexport const getMissingValues = (label) => {\n  return label.matchAll(MISSING_VALUES_REGEX);\n};\n\nexport const getTypeFromLabel = (label) => {\n  const match = OPEN_REGEX.exec(label);\n  const [, keyword] = match;\n  return keyword;\n};\n","/**\n * Utility functions for dealing with Range objects.\n */\n\n/**\n * Wrap a Range object and treat it as a sequence of leaf nodes over a DOM tree.\n */\nexport default class RangeUtils {\n  #startNode;\n  #startOffset;\n  #endNode;\n  #endOffset;\n  #startingPoint;\n  #endingPoint;\n  #startRange;\n\n  /**\n   * @param Range object\n   */\n  constructor({ startContainer, startOffset, endContainer, endOffset }) {\n    this.#startNode = startContainer;\n    this.#startOffset = startOffset;\n    this.#endNode = endContainer;\n    this.#endOffset = endOffset;\n\n    this.#endingPoint = new Range();\n    this.#endingPoint.setStart(endContainer, endOffset);\n    this.#endingPoint.setEnd(endContainer, endOffset);\n\n    this.#startRange = new Range();\n    this.#startRange.setStart(startContainer, startOffset);\n    if (startContainer === endContainer) {\n      this.#startRange.setEnd(endContainer, endOffset);\n    } else {\n      this.#startRange.setEndAfter(startContainer);\n    }\n  }\n\n  prepend(node) {\n    this.#startRange.insertNode(node);\n  }\n\n  append(node) {\n    this.#endingPoint.insertNode(node);\n  }\n\n  /**\n   * Apply a function to each DOM leaf node within this range.\n   * @param fn (leafRangeObject) => {...}\n   */\n  apply(fn) {\n    // apply to the left-most range\n    fn(this.#startRange);\n\n    // recursively move to siblings/uncles until the end is found\n\n    if (this.#startNode === this.#endNode) {\n      // found the end already, nothing left to do\n      return;\n    }\n\n    // apply fn to every leaf node right of the #startNode\n    let currentNode = this.#startNode;\n    for (;;) {\n      if (currentNode.nextSibling) {\n        // apply to the next sibling and continue\n        currentNode = currentNode.nextSibling;\n        if (this.applyToLeaves(fn, currentNode)) {\n          // reach the end node, so don't continue\n          return;\n        }\n      } else {\n        // done applying to siblings... move up to parent and repeat\n        currentNode = currentNode.parentNode;\n      }\n    }\n  }\n\n  /**\n   * Apply a function to a single leaf DOM node.\n   * @param fn (leafRangeObject) => {...}\n   * @param currentNode leaf DOM node\n   * @returns true iff this node is the last node within the range\n   */\n  applyToLeaf(fn, currentNode) {\n    const currentRange = new Range();\n    currentRange.setStartBefore(currentNode);\n\n    if (currentNode !== this.#endNode) {\n      currentRange.setEndAfter(currentNode);\n      fn(currentRange);\n      return false;\n    }\n\n    currentRange.setEnd(this.#endNode, this.#endOffset);\n    fn(currentRange);\n    return true;\n  }\n\n  /**\n   * Apply a function to all leaf nodes under a DOM node.\n   * @param fn (leafRangeObject) => {...}\n   * @param startNode\n   * @returns true iff the last node within the range is a child of startNode\n   */\n  applyToLeaves(fn, startNode) {\n    const stack = [startNode];\n\n    while (stack.length !== 0) {\n      const currentNode = stack.pop();\n      if (currentNode.childNodes.length === 0) {\n        if (this.applyToLeaf(fn, currentNode)) {\n          return true;\n        }\n      } else {\n        for (let i = currentNode.childNodes.length - 1; i >= 0; i--) {\n          stack.push(currentNode.childNodes[i]);\n        }\n      }\n    }\n\n    return false;\n  }\n}\n","import { isLabelValid, getTagsFromLabel, getMissingValues } from './common.js';\nimport RangeUtils from 'common/RangeUtils.js';\n\nexport default class CookieSynthLabel {\n  missingProperties = [];\n  #propertyOffsets = [];\n  providedValues = [];\n  #label;\n  #range;\n  completedLabel;\n\n  constructor(range, label) {\n    const missingValueMatches = getMissingValues(label);\n\n    for (let item of missingValueMatches) {\n      const context = item[1];\n      const offset = item.index + item[0].search('\"?\"') + 1;\n      this.#propertyOffsets.push([context, offset]);\n      this.missingProperties.push(context);\n    }\n\n    this.#range = range;\n    this.#label = label;\n  }\n\n  setNextValue(value) {\n    const nextIndex = this.providedValues.length;\n    const [, offset] = this.#propertyOffsets[nextIndex];\n    this.providedValues.push([value, offset]);\n  }\n\n  getCompletedLabel() {\n    let originalLabel = this.#label;\n    let result = '';\n    let lastOffset = 0;\n    for (let i = 0; i < this.providedValues.length; i++) {\n      const [value, nextOffset] = this.providedValues[i];\n      const appendPart = originalLabel.substring(lastOffset, nextOffset);\n      result += appendPart + value;\n      lastOffset = nextOffset + 1;\n    }\n    result += originalLabel.substring(lastOffset, originalLabel.length);\n\n    this.completedLabel = result;\n    return result;\n  }\n\n  injectLabel() {\n    const completedLabel = this.getCompletedLabel();\n\n    if (!isLabelValid(completedLabel)) {\n      return false;\n    }\n\n    const [tagStart, tagEnd] = getTagsFromLabel(completedLabel);\n    addLabelToRange(tagStart, tagEnd, this.#range);\n    return true;\n  }\n}\n\n// Highlights a Range object. The Range object MUST NOT span over multiple DOM nodes.\nconst highlightSimpleRange = (range) => {\n  const newNode = document.createElement('span');\n  newNode.setAttribute('style', 'background-color: yellow;');\n  newNode.setAttribute('data-cookiesynth-style', 'highlight');\n  newNode.setAttribute('class', 'highlight');\n  range.surroundContents(newNode);\n};\n\nconst addLabelToRange = (tagStart, tagEnd, range) => {\n  const utils = new RangeUtils(range);\n\n  const startIndicator = document.createElement('span');\n  startIndicator.setAttribute('data-cookiesynth', tagStart);\n  utils.prepend(startIndicator);\n\n  if (tagEnd) {\n    const endIndicator = document.createElement('span');\n    endIndicator.setAttribute('data-cookiesynth', tagEnd);\n    utils.append(endIndicator);\n  }\n\n  // Highlight the selection\n  utils.apply((range) => highlightSimpleRange(range));\n};\n","import React, { useState, useContext } from 'react';\nimport { Grid } from '@material-ui/core';\n\nimport { ThemeContext } from 'theme.js';\nimport { useClipfics } from 'tasks.js';\nimport TextFieldModal from 'common/TextFieldModal.js';\nimport { useSelectionCache } from 'common/ContainerSelection.js';\nimport useModalControls from 'common/useModalControls.js';\nimport useLoopControls from 'common/useLoopControls.js';\nimport CookieSynthLabel from './cookiesynth/CookieSynthLabel.js';\n\n/**\n * React effect to highlight text by hotkey.\n * @param navigator StateMachine with which to register this hotkey\n * @param containerRef React ref for where a selection is valid\n */\nconst ClipficsHotkey = ({ onLabel, shortcut, description }) => {\n  const { hotkeys, selection } = useClipfics();\n\n  // Highlight selection only if it falls within the container\n  const highlightWithinElement = () => {\n    const selectionRange = selection.getRange();\n    if (selectionRange) {\n      onLabel(description);\n    }\n  };\n\n  return (\n    <hotkeys.Hotkey\n      shortcut={shortcut}\n      action={highlightWithinElement}\n      description={description}\n    />\n  );\n};\n\nexport const ClipficsLabelsPanel = ({ ...props }) => {\n  const { classes } = useContext(ThemeContext);\n\n  const { hotkeys, selection, terminal } = useClipfics();\n  const { saveSelection, restoreSelection } = useSelectionCache(selection);\n  const {\n    currentItem: currentMissingProp,\n    hasNext: hasMissingProps,\n    begin: beginRequestMissingProps,\n    moveToNext: requestNextMissingProp,\n    terminate: stopRequestingProps,\n  } = useLoopControls();\n  const {\n    isModalOpen: isTemplateModalOpen,\n    openModal: openTemplateModal,\n    closeModal: closeTemplateModal,\n  } = useModalControls();\n\n  const [displayKeys, setDisplayKeys] = useState([]);\n  let [pendingLabel, setPendingLabel] = useState();\n\n  const onTemplateSpecified = (text) => {\n    saveSelection();\n\n    pendingLabel = new CookieSynthLabel(selection.getRange(), text);\n    setPendingLabel(pendingLabel);\n\n    beginRequestMissingProps(pendingLabel.missingProperties)\n      .then(() => {\n        if (pendingLabel.injectLabel()) {\n          terminal.log('added label:', pendingLabel.completedLabel);\n        } else {\n          terminal.log('invalid label:', pendingLabel.completedLabel);\n        }\n        restoreSelection();\n      })\n      .catch((error) => {\n        console.log(error);\n        setPendingLabel(null);\n        stopRequestingProps();\n        restoreSelection();\n      });\n  };\n\n  const onHotkeyAdded = (shortcut, label) => {\n    const newHotkey = (\n      <ClipficsHotkey\n        key={shortcut}\n        onLabel={onTemplateSpecified}\n        shortcut={shortcut}\n        description={label}\n      />\n    );\n\n    setDisplayKeys([newHotkey, ...displayKeys]);\n  };\n\n  return (\n    <Grid container {...props}>\n      <Grid item className={classes['c-controls--fill-width']}>\n        <hotkeys.Hotkey\n          shortcut=\"Enter\"\n          action={() => {\n            saveSelection();\n            openTemplateModal();\n          }}\n          description=\"create custom label\"\n        />\n        <ClipficsHotkey\n          shortcut=\"c\"\n          onLabel={onTemplateSpecified}\n          description='dialogue character=\"?\"'\n        />\n        <ClipficsHotkey\n          shortcut=\"e\"\n          onLabel={onTemplateSpecified}\n          description='meta character=\"?\" emotion=\"?\"'\n        />\n        <div children={displayKeys} />\n        <TextFieldModal\n          open={isTemplateModalOpen}\n          onComplete={(text) => {\n            closeTemplateModal();\n            restoreSelection();\n            onTemplateSpecified(text);\n          }}\n          onClose={() => {\n            closeTemplateModal();\n            restoreSelection();\n          }}\n          label=\"Add label\"\n        />\n        <TextFieldModal\n          open={hasMissingProps}\n          onComplete={(text) => {\n            pendingLabel.setNextValue(text);\n            requestNextMissingProp();\n          }}\n          onClose={stopRequestingProps}\n          label={currentMissingProp}\n        />\n        <hotkeys.CreateNewHotkey onHotkeyAdded={onHotkeyAdded} />\n      </Grid>\n    </Grid>\n  );\n};\n","import { useState } from 'react';\n\n/**\n * Follow a UI flow that loops over an array. Expected usage:\n * \n * Declare the control flow functions at the top of the parent React component:\n *   const { currentItem, hasNext, begin, moveToNext, terminate } = useLoopControls();\n * Call begin() to begin the loop:\n *    begin(arrayItemsToLoopOver);\n * Use hasNext and currentItem to display the relevant UI:\n *    <SingleItemHandler visible={hasNext} value={currentItem} ... />\n * Once done with the current item, move to the next item with moveToNext():\n *    <SingleItemHandler ... onComplete={moveToNext} ... />\n * Abort the loop using terminate():\n *    <SingleItemHandler ... onError={terminate} />\n * Handle any final steps and cleanup with the promise returned from begin():\n *    begin(...).then(...).catch(...);\n */ \nexport default () => {\n  let [currentArray, setCurrentArray] = useState();\n  let [currentIndex, setCurrentIndex] = useState();\n  let [currentItem, setCurrentItem] = useState();\n  let [hasNext, setHasNext] = useState(false);\n\n  let [resolveArray, setResolveArray] = useState();\n  let [rejectArray, setRejectArray] = useState();\n\n  const begin = (array) => {\n    return new Promise((resolve, reject) => {\n      if (array.length === 0) {\n        resolve();\n        return;\n      }\n\n      // retain callbacks for when the loop is complete\n      resolveArray = resolve;\n      setResolveArray(() => resolveArray);\n      rejectArray = reject;\n      setRejectArray(() => rejectArray);\n\n      // initialize the loop\n      setCurrentArray(currentArray = array);\n      setHasNext(hasNext = true);\n      setCurrentIndex(currentIndex = 0);\n      setCurrentItem(currentItem = currentArray[0]);\n    });\n  }\n\n  /**\n   * Complete the loop with an error.\n   */\n  const terminate = () => {\n    setHasNext(hasNext = false);\n    rejectArray && rejectArray();\n  }\n\n  /**\n   * Move to the next loop iteration.\n   */\n  const moveToNext = () => {\n    if (!hasNext) {\n      throw new Error('attempted to iterate past the end of the loop');\n    }\n\n    let newIndex = currentIndex + 1;\n\n    if (newIndex >= currentArray.length) {\n      // terminate the loop successfully\n      setHasNext(hasNext = false);\n      setCurrentIndex(currentIndex = newIndex);\n      setCurrentItem(currentItem = null);\n      resolveArray();\n      return;\n    }\n\n    setCurrentIndex(currentIndex = newIndex);\n    setCurrentItem(currentItem = currentArray[newIndex]);\n  }\n\n  return { currentItem, hasNext, begin, moveToNext, terminate };\n}","import { useState } from 'react';\n\nexport default () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  }\n\n  return { isModalOpen, openModal, closeModal };\n};","import React, { useState, useContext } from 'react';\n\nimport { Box, Tab, Tabs, Toolbar, Typography } from '@material-ui/core';\n\nimport { ThemeContext } from 'theme.js';\nimport { ClipficsLabelsPanel } from './LabelsPanel.js';\n\n\n\n/**\n * Stub class for displaying a tab panel. This is used for the Labels, Shortcuts,\n * and Search panels.\n */\nconst TabPanel = ({ children, value, index, ...other }) => (\n  <Typography component=\"div\" hidden={value !== index} {...other}>\n    <Box p={3}>{children}</Box>\n  </Typography>\n);\n\n/**\n * Panel used to display control options. This panel contains three tabs:\n *   * Labels -\n *   * Shortcuts -\n *   * Search -\n */\nexport default () => {\n  const { classes } = useContext(ThemeContext);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const onTabSelected = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  return (\n    <div>\n      <Toolbar>\n        <Tabs value={selectedTab} onChange={onTabSelected}>\n          <Tab label=\"Labels\" />\n          <Tab label=\"Files\" />\n        </Tabs>\n      </Toolbar>\n      <TabPanel className={classes.controlTab} value={selectedTab} index={0}>\n        <ClipficsLabelsPanel />\n      </TabPanel>\n      <TabPanel className={classes.controlTab} value={selectedTab} index={1}>\n      </TabPanel>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport sanitizeHtml from 'sanitize-html';\n\nimport { useClipfics } from 'tasks.js';\n\n// Panel used to display an HTML story.\nexport default ({ children, ...other }) => {\n  const sanitizedHtml = customSanitizeHtml(children);\n  const { terminal } = useClipfics();\n\n  const div = document.createElement('div');\n  div.innerHTML = sanitizedHtml;\n\n  const labels = div.querySelectorAll('[data-cookiesynth-style]');\n  if (labels.length !== 0) {\n    terminal.log(\"loading existing tags\");\n  }\n\n\n  labels.forEach((e) => {\n    e.setAttribute('style', 'background-color: yellow;');\n  });\n\n  return <Paper {...other} dangerouslySetInnerHTML={{ __html: div.innerHTML }} />;\n};\n\nconst customSanitizeHtml = (html) => {\n  // default options plus h1, h2, and hr\n  return sanitizeHtml(html, {\n    allowedTags: [\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'hr',\n      'blockquote',\n      'p',\n      'a',\n      'ul',\n      'ol',\n      'nl',\n      'li',\n      'b',\n      'i',\n      'strong',\n      'em',\n      'span',\n      'strike',\n      'code',\n      'hr',\n      'br',\n      'div',\n      'table',\n      'thead',\n      'caption',\n      'tbody',\n      'tr',\n      'th',\n      'td',\n      'pre',\n      'iframe',\n    ],\n    disallowedTagsMode: 'discard',\n    allowedAttributes: {\n      a: ['href', 'name', 'target'],\n      img: ['src'],\n      span: ['data-cookiesynth', 'data-cookiesynth-style'],\n    },\n    selfClosing: [\n      'img',\n      'br',\n      'hr',\n      'area',\n      'base',\n      'basefont',\n      'input',\n      'link',\n      'meta',\n    ],\n    allowedSchemes: ['http', 'https', 'ftp', 'mailto'],\n    allowedSchemesByTag: {},\n    allowedSchemesAppliedToAttributes: ['href', 'src', 'cite'],\n    allowProtocolRelative: true,\n  });\n};\n","/**\n * Main entry point for the frontend.\n */\n\nimport React, { useState, createRef, useContext } from 'react';\n\nimport {\n  AppBar,\n  Button,\n  Grid,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { ThemeContext, useStyles, theme } from './theme.js';\nimport { ClipficsContext } from './tasks.js';\nimport Hotkeys from './common/Hotkeys.js';\nimport Terminal from './common/Terminal.js';\nimport ContainerSelection from './common/ContainerSelection.js';\nimport FileImportButton from './common/FileImportButton.js';\nimport ClipficsControlPanel from './clipfics/ClipficsControlPanel.js';\nimport CookieSynthPaper from './clipfics/cookiesynth/CookieSynthPaper.js';\n\n/**\n * Navigation bar at the top of the site. This doesn't serve any functiona purpose at\n * the moment.\n */\nconst NavigationBar = () => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\">Clipfics</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n/**\n * Button to export a labeled story file, which is not what it does at the moment.\n * This currently highlights the selected text. Note that this will highlight ANY\n * text selected on the page, not just story text.\n */\nconst CookieSynthExport = () => {\n  const { classes } = useContext(ThemeContext);\n\n  const download = () => {\n    const storyData = document.getElementById('js-story-sheet').innerHTML;\n    const storyBlob = new Blob([storyData], {\n      'type': 'text/html'\n    });\n\n    const a = document.createElement('a');\n    a.setAttribute('href', window.URL.createObjectURL(storyBlob));\n    a.download = \"cookiesynth - story.html\";\n    a.click();\n\n  };\n  return <Button className={classes['c-fileio-export-button']} onClick={download}>Export labels</Button>;\n};\n\n/**\n * Main app.\n */\nconst App = () => {\n  const [storyContents, setStoryContents] = useState('Load a story');\n\n  const themeContext = {\n    classes: useStyles(theme),\n  };\n  const classes = themeContext.classes;\n\n  const taskContext = {};\n  taskContext.hotkeys = new Hotkeys();\n  taskContext.hotkeys.useHotkeys();\n  taskContext.storyContainerRef = createRef();\n  taskContext.selection = new ContainerSelection(taskContext.storyContainerRef);\n  taskContext.terminal = new Terminal();\n\n  taskContext.terminal.log(\"hello, anonymous.\");\n  taskContext.terminal.log(\"do you need help using this interface?\");\n\n  const TerminalDisplay = taskContext.terminal.Component;\n\n  return (\n    <ThemeContext.Provider value={themeContext}>\n      <div id=\"app\" className={classes['c-app--full-height']}>\n        <NavigationBar />\n        <ClipficsContext.Provider value={taskContext}>\n          <Grid container spacing={2}>\n            <Grid item xs={7} className={classes['c-story-panel--full-height']}>\n              <div\n                ref={taskContext.storyContainerRef}\n                className={classes['c-story-panel__container']}\n              >\n                <CookieSynthPaper\n                  id=\"js-story-sheet\"\n                  className={classes['c-story-panel__paper']}\n                >\n                  {storyContents}\n                </CookieSynthPaper>\n              </div>\n            </Grid>\n            <Grid item xs={5} className={classes['c-control-panel']}>\n              <ClipficsControlPanel />\n              <Grid container>\n                <FileImportButton onFileLoaded={(contents) => {\n                  taskContext.terminal.log('loading fic');\n                  setStoryContents(contents);\n                }} />\n                <CookieSynthExport />\n              </Grid>\n            </Grid>\n          </Grid>\n        </ClipficsContext.Provider>\n        <TerminalDisplay />\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}